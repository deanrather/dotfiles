# tmux.conf
#
# Installation:
#
#   wget -O ~/.tmux.conf https://raw.githubusercontent.com/deanrather/dotfiles/master/tmux.conf
#
#
# Usage:
#
#   Tmux:
#
#   - `tmux` to create a new session
#   - `Ctrl+a, d` to detach from a session
#   - `tmux a` to attac to an existing session
#
#   Window Management:
#
#   - new                     : Ctrl+a, w
#   - rename                  : Ctrl+a, F2
#   - select (left/right)     : Ctrl+a, q/e
#   - rearrange (left/right)  : Ctrl+a, Shift+q/e
#   - select previous         : Ctrl+a, Tab
#   - select n                : Ctrl+a, <1-9>
#
#   Panes Management:
#
#   - split pane horizontally         : Ctrl+a, -
#   - split pane vertically           : Ctrl+a, |
#   - select pane in <direction>      : Ctrl+a, <direction>
#   - swap with pane in <direction>   : Ctrl+a, Ctrl+<direction>
#   - resize pane in <direction>      : Ctrl+a, Shift+<direction>
#   - change layout                   : Ctrl+a, <space>
#
#   Notes:
#   - Close pane, close window, and exit tmux are all: Ctrl+d
#   - TMUX prevents highlight to copy, so use shift+highlight to copy
#   - <direction> being one of the arrow keys, or H/J/K/L
#
#
# Configuration Notes:
#
# - `bind <key>` requires the previx. eg: `bind w` would require pressing: `Ctrl+a, w`
# - `bind -n <key>` binds without prefix. eg: `bind -n w` would require pressing: `Ctrl+w`
# - `bind -r` allows you to repeate a key. eg: `bind -r w` would allow you to press `Ctrl+a, w, w, w`
# - `bind-key` is an alias of `bind`
# - `C-<key>` is an alias of Ctrl+<key>
# - `M-<key>` is an alias of Mod+<key> (Alt key on windows)
# - `S-<key>` is an alias of Shift+<key> (Only works for keys w/o shift feature. eg: arrow keys)
# - Tmux can't bind over the top of OS binds. eg: `C-pageDown` is taken by gnome-terminal
# - To see all the defaults, run `tmux -f fakeconfig` to force a default load, then hit `Ctrl+b, ?`
# - https://robots.thoughtbot.com/a-tmux-crash-course
# 





############
# Settings #
############


## Settings - Keybinds ##

unbind-key -a # Clear existing keybinds

# Use (Ctrl-a) as the prefix (like in gnu-screen)
set-option -g prefix C-a
bind C-a send-prefix





## Settings - Windows ##

# start with window 1 (instead of 0)
set -g base-index 1

# when closing a window, renumber higher ones to fill the gap
set -g renumber-windows on

# make ctrl+left, right jump left-right works as per usual
set-window-option -g xterm-keys on

# Don't show window activity in status bar
set-window-option -g monitor-activity off





## Settings - Panes ##

# start with pane 1
set -g pane-base-index 1

# resizing
setw -g aggressive-resize on




## Settings - Vim Mode ##

# vim style copy paste mode
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'

# use vi mode
setw -g mode-keys vi
set -g status-keys vi
setw -g utf8 on




## Settings - Notifications ##

set-option -g visual-activity on
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none




## Settings - Misc ##

# increase history limit
set -g history-limit 10000

# use two hundred and fifty-six colours!
set -g default-terminal "screen-256color"

# allow terminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'










############
# Keybinds #
############



## Keybinds - Windows ##

bind w new-window              # open new window
bind -r Tab last-window        # toggle previous open window
bind -r q prev                 # select prev window
bind -r e next                 # select next window
bind -r Q swap-window -t -1    # swap with prev window
bind -r E swap-window -t +1    # swap with next window

# Rename window (and clear out old name)
bind F2 command-prompt -p (rename-window) "rename-window '%%'"

bind-key 1 select-window -t :1
bind-key 2 select-window -t :2
bind-key 3 select-window -t :3
bind-key 4 select-window -t :4
bind-key 5 select-window -t :5
bind-key 6 select-window -t :6
bind-key 7 select-window -t :7
bind-key 8 select-window -t :8
bind-key 9 select-window -t :9



## Keybinds - Panes ##

# Create new pane
bind -r | split-window -h
bind -r - split-window -v

# Change layout
bind-key -r Space next-layout

# Select Panes
bind -r up    select-pane -U
bind -r down  select-pane -D
bind -r left  select-pane -L
bind -r right select-pane -R
bind -r k     select-pane -U
bind -r j     select-pane -D
bind -r h     select-pane -L
bind -r l     select-pane -R

# Resize Panes
bind -r S-up     resize-pane -U 5
bind -r S-down   resize-pane -D 5
bind -r S-left   resize-pane -L 5
bind -r S-right  resize-pane -R 5
bind -r S-k      resize-pane -U 5
bind -r S-j      resize-pane -D 5
bind -r S-h      resize-pane -L 5
bind -r S-l      resize-pane -R 5

# Rearrange Panes
bind -r C-left     swap-pane -U
bind -r C-right    swap-pane -D
bind -r C-h        swap-pane -U
bind -r C-l        swap-pane -D





## Keybinds - Misc ##

# Reload tmux config
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf reloaded!'

# Open command prompt
bind : command-prompt

# Open a man page in new window
# bind ? command-prompt "split-window 'exec man %%'"

# View processes
bind '~' split-window "exec htop"

# View tmux config help
bind a run-shell 'head -n 38 ~/.tmux.conf | tail -n 30'

# View key bindings
bind ? list-keys

# Disconnect from Tmux
bind d detach-client

# Screensaver
bind t clock-mode


## Keybindings - Examples ##

# bind q display 'ctrl+a, q'
# bind Q display 'ctrl+a, shift+q'
# bind C-q display 'ctrl+a, ctrl+q'
# bind M-q display 'ctrl+a, alt+q'
# bind S-Up display 'ctrl+a, shift+up'
# bind -r z display 'ctrl+a, z...'










##########
# Styles #
##########


## Styles - Panes ##

set -g pane-border-fg colour0
set -g pane-active-border-fg colour0




## Styles - Windows ##

# windows status
set-option -g status-position bottom
setw -g window-status-format "#[bg=colour11,fg=colour0,noreverse]█▓░ #W "
setw -g window-status-current-format "#[bg=colour66,fg=colour0,noreverse]█▓░ #W "

# window mode
setw -g mode-bg colour66
setw -g mode-fg colour0




## Styles - Status Bar ##

# status line
set -g status-utf8 on
set -g status-justify left
set -g status-bg colour0
set -g status-fg colour66
set -g status-interval 2

# messaging
set -g message-fg colour0
set -g message-bg colour66
set -g message-command-fg colour66
set -g message-command-bg colour1

# status bar - window id, pane id, :: date
set -g status-right-length 60
set -g status-right "#[fg=blue]#I:#P #[fg=green]|%l:%M %p"

# Info on left (no session display)
set -g status-left ''


